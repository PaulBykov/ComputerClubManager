// <auto-generated />
using System;
using ComputerClub.Model;
using ComputerClub.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComputerClub.Migrations
{
    [DbContext(typeof(ComputerClubContext))]
    [Migration("20240428152712_Relations_1")]
    partial class Relations_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ComputerClub.Model.Club", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<double>("Balance")
                        .HasColumnType("float")
                        .HasColumnName("balance");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__clubs__3213E83F9C5F08A6");

                    b.ToTable("clubs", (string)null);
                });

            modelBuilder.Entity("ComputerClub.Model.Computer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ClubId")
                        .HasColumnType("int")
                        .HasColumnName("club_id");

                    b.Property<string>("RateName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("rate_name");

                    b.Property<int?>("RentId")
                        .HasColumnType("int")
                        .HasColumnName("rentId");

                    b.HasKey("Id")
                        .HasName("PK__computer__3213E83F569F54ED");

                    b.HasIndex("ClubId");

                    b.HasIndex("RateName");

                    b.HasIndex("RentId");

                    b.ToTable("computers", (string)null);
                });

            modelBuilder.Entity("ComputerClub.Model.Income", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int>("ClubId")
                        .HasColumnType("int")
                        .HasColumnName("club_id");

                    b.HasKey("Id")
                        .HasName("PK__incomes__3213E83F4C68E736");

                    b.HasIndex("ClubId");

                    b.ToTable("incomes", (string)null);
                });

            modelBuilder.Entity("ComputerClub.Model.Rate", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("name");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.HasKey("Name")
                        .HasName("PK__rates__72E12F1A9788C4A4");

                    b.ToTable("rates", (string)null);
                });

            modelBuilder.Entity("ComputerClub.Model.Rent", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<TimeOnly>("Length")
                        .HasColumnType("time")
                        .HasColumnName("length");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("start_time");

                    b.HasKey("Id")
                        .HasName("PK__rents__3213E83FB4F8AF02");

                    b.ToTable("rents", (string)null);
                });

            modelBuilder.Entity("ComputerClub.Model.Stuff", b =>
                {
                    b.Property<int>("ClubId")
                        .HasColumnType("int")
                        .HasColumnName("club_id");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fullname");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("PassHash")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("pass_hash")
                        .IsFixedLength();

                    b.Property<string>("Role")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("role");

                    b.HasIndex("ClubId");

                    b.ToTable("stuff", (string)null);
                });

            modelBuilder.Entity("ComputerClub.Model.Computer", b =>
                {
                    b.HasOne("ComputerClub.Model.Club", "Club")
                        .WithMany("Computers")
                        .HasForeignKey("ClubId")
                        .IsRequired()
                        .HasConstraintName("FK__computers__clubI__5812160E");

                    b.HasOne("ComputerClub.Model.Rate", "RateNameNavigation")
                        .WithMany("Computers")
                        .HasForeignKey("RateName")
                        .IsRequired()
                        .HasConstraintName("FK__computers__rateN__59063A47");

                    b.HasOne("ComputerClub.Model.Rent", "Rent")
                        .WithMany("Computers")
                        .HasForeignKey("RentId")
                        .HasConstraintName("FK__computers__rentI__59FA5E80");

                    b.Navigation("Club");

                    b.Navigation("RateNameNavigation");

                    b.Navigation("Rent");
                });

            modelBuilder.Entity("ComputerClub.Model.Income", b =>
                {
                    b.HasOne("ComputerClub.Model.Club", "Club")
                        .WithMany("Incomes")
                        .HasForeignKey("ClubId")
                        .IsRequired()
                        .HasConstraintName("FK__incomes__clubId__3C69FB99");

                    b.Navigation("Club");
                });

            modelBuilder.Entity("ComputerClub.Model.Stuff", b =>
                {
                    b.HasOne("ComputerClub.Model.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .IsRequired()
                        .HasConstraintName("FK__stuff__clubId__3E52440B");

                    b.Navigation("Club");
                });

            modelBuilder.Entity("ComputerClub.Model.Club", b =>
                {
                    b.Navigation("Computers");

                    b.Navigation("Incomes");
                });

            modelBuilder.Entity("ComputerClub.Model.Rate", b =>
                {
                    b.Navigation("Computers");
                });

            modelBuilder.Entity("ComputerClub.Model.Rent", b =>
                {
                    b.Navigation("Computers");
                });
#pragma warning restore 612, 618
        }
    }
}
